/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package bitmap.transformer;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Arrays;

public class App {

// will read a bitmap in from disk, run one or more color or raster transforms and then write it out to a new file
//The CLI should be architected using the best modularization practices.
//The CLI should contain a Bitmap class, and reading in a file should create a new Bitmap instance.
//The CLI should require at least three arguments: input-file-path output-file-path transform-name.
//The CLI should support a minimum of three transforms, each of which is an instance method in the Bitmap class.
    public static void main (String[] args) {
        getFileBytes();

    }
    public static byte[] getFileBytes(){
        Path pathToFile = Paths.get("baldy-8bit.bmp");
        byte[] fileContent;
        try{
            fileContent = Files.readAllBytes(pathToFile.toAbsolutePath());
            System.out.println(Arrays.toString(fileContent));
//            for(byte img : fileContent){
//                System.out.println(img);
//            }

        } catch (IOException ioe) {
            ioe.printStackTrace();
            return null;
        }
    return fileContent;

    }
//    string imagePath = "app/src/main/java/resources/baldy-8bit.bmp";

}
